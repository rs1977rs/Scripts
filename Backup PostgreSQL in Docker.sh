#! /bin/bash

# Скрипт для архивации БД PostreSQL работающей в Docker на удалённом хосте.
# После выполнения бэкапа средствами Postgres, файл .sql с бэкапом копируется на другой хост.
# Точнее, происходит синхронизация каталогов на хосте с докером и хосте с которого выполняется скрипт.

# Определяем переменные: хост с БД, исходный каталог резервных копий БД, каталог бэкапа на другом хосте, глубину бэкапа
# dockerhost - удаленный хост в формате для выполнения команды докера
# remotehost - по факту он же, только запись в формате файла ./ssh/config
# datadir - каталог, куда pg_dump будет складывать бэкапы базы
# backupdir - каталог, куда эти бэкапы будут пересылаться для хранения на другом хосте

dockerhost="ssh://<login>@<IP>:<port(опционально)>"
remotehost="<хост в файле /.ssh/config>"
datadir="/path/to/postgres/backup/dir"
backupdir="/path/to/backup/dir/"
backuptotal=20


# Определяем количество файлов резервных копий для удаления
delfiles=$(($(ssh $remotehost "ls $datadir | wc -l")-$backuptotal))

# Создаём резервную копию БД
# Каталог '/var/lib/postgresql/backup/' должен существовать (нужно создать его заранее)
docker -H $dockerhost  exec -ti <имя контейнера с Postgres> sh -c "pg_dump -Udocs docs > /var/lib/postgresql/backup/<имя архива>_$(date +%d-%m-%Y).sql"

# После этого смотрим количество резервных копий в каталоге и если их больше, чем нужно,
# получаем список "лишних" файлов и удаляем их	
[ "$delfiles" -gt 0 ] && ssh $remotehost "ls -t $datadir" | tail -n$delfiles | xargs -L1 echo $datadir | tr -d ' ' | xargs ssh $remotehost "rm"

# Подробнее команда выше:
# [ "$delfiles" -gt 0 ] 	- сравниваем количество файлов для удаления с нулем, всё остальное выполняется только при строго пложительном результате
# ssh $remotehost "ls -t $datadir"	- получаем список файлов исходного каталога отсортированный по времени
# tail -n$delfiles 		- получаем только те файлы, которые надо удалить
# xargs -L1 echo $datadir 	- выводим их построчно, добавляя впереди абсолютный путь
# tr -d ' ' 			- удаляем пробел между абсолютным путем и именем файла
# xargs ssh $remotehost "rm" 	- передаем список файлов с абсолютными путями на удаление на удаленный хост


# Синхронизируем каталоги на удалённом хосте с БД и хосте для резервных копий с удалением файлов, отсутствующих в исходном каталоге на удаленном хосте
rsync -av --delete $remotehost:$datadir $backupdir
